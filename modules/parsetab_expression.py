
# parsetab_expression.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMODleftPLUSMINUSleftTIMESDIVIDErightUMINUSrightPOWleftGTGTELTLTEEQNEQNAME INT FLOAT POW MOD GT GTE LT LTE EQ NEQ PLUS MINUS TIMES DIVIDE EQUALS LPAREN RPAREN COMMA RBRACK LBRACK RBRACE LBRACE COLON STRINGstatement : expressionexpression : expression PLUS expression\n                      | expression MINUS expression\n                      | expression TIMES expression\n                      | expression DIVIDE expression\n                      | expression POW expression\n                      | expression MOD expression\n                      | expression GT expression\n                      | expression GTE expression\n                      | expression LT expression\n                      | expression LTE expression\n                      | expression EQ expression\n                      | expression NEQ expressionexpression : MINUS expression %prec UMINUSexpression : FLOAT NAME\n                      | INT NAMEexpression : FLOAT\n                      | INTexpression : STRINGexpression : NAME LPAREN arglist RPAREN\n                      | NAME LPAREN kwarglist RPAREN\n                      | NAME LPAREN arglist COMMA kwarglist RPARENexpression : NAMEexpression : NAME NAMEarglist : expression\n                   | arglist COMMA expressionkwarglist : NAME EQUALS expression\n                     | kwarglist COMMA NAME EQUALS expressionexpression : LBRACK listentry RBRACKexpression : LBRACE dictentry RBRACElistentry : expression\n                     | listentry COMMA expressiondictentry : expression COLON expression\n                     | dictentry COMMA expression COLON expressionexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'RBRACK':([5,6,7,10,11,25,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,53,56,59,62,68,],[-23,-19,-18,-17,-14,-24,-16,-31,53,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,-7,-4,-35,-30,-29,-20,-21,-32,-22,]),'MINUS':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,50,51,52,53,54,55,56,57,59,60,61,62,63,65,67,68,69,70,71,],[1,1,12,1,-23,-19,-18,1,1,-17,-14,1,1,1,1,1,1,1,1,1,1,1,1,12,-24,1,-16,12,12,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,12,-4,-35,12,-23,1,-30,1,-29,1,1,-20,1,-21,12,12,12,12,12,1,-22,1,12,12,]),'$end':([2,4,5,6,7,10,11,25,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,53,56,59,68,],[-1,0,-23,-19,-18,-17,-14,-24,-16,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,-7,-4,-35,-30,-29,-20,-21,-22,]),'MOD':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[22,-23,-19,-18,-17,-14,22,-24,-16,22,22,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,-7,-4,-35,22,-23,-30,-29,-20,-21,22,22,22,22,22,-22,22,22,]),'EQ':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[16,-23,-19,-18,-17,16,16,-24,-16,16,16,-15,16,-13,-10,-11,-12,-9,16,16,-8,16,16,16,-35,16,-23,-30,-29,-20,-21,16,16,16,16,16,-22,16,16,]),'GTE':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[17,-23,-19,-18,-17,17,17,-24,-16,17,17,-15,17,-13,-10,-11,-12,-9,17,17,-8,17,17,17,-35,17,-23,-30,-29,-20,-21,17,17,17,17,17,-22,17,17,]),'EQUALS':([48,66,],[57,69,]),'LPAREN':([0,1,3,5,8,9,12,13,14,15,16,17,18,19,20,21,22,23,26,48,50,52,54,55,57,67,69,],[3,3,3,26,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,26,3,3,3,3,3,3,3,]),'LBRACE':([0,1,3,8,9,12,13,14,15,16,17,18,19,20,21,22,23,26,50,52,54,55,57,67,69,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'GT':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[20,-23,-19,-18,-17,20,20,-24,-16,20,20,-15,20,-13,-10,-11,-12,-9,20,20,-8,20,20,20,-35,20,-23,-30,-29,-20,-21,20,20,20,20,20,-22,20,20,]),'PLUS':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[21,-23,-19,-18,-17,-14,21,-24,-16,21,21,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,21,-4,-35,21,-23,-30,-29,-20,-21,21,21,21,21,21,-22,21,21,]),'COMMA':([5,6,7,10,11,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,56,59,60,62,63,64,65,68,70,71,],[-23,-19,-18,-17,-14,-24,-16,52,-31,54,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,-7,-4,-35,55,-25,-23,58,-30,-29,-20,-21,-33,-32,-26,58,-27,-22,-34,-28,]),'RPAREN':([5,6,7,10,11,24,25,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,56,59,63,64,65,68,71,],[-23,-19,-18,-17,-14,45,-24,-16,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,-7,-4,-35,56,-25,-23,59,-30,-29,-20,-21,-26,68,-27,-22,-28,]),'NEQ':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[13,-23,-19,-18,-17,13,13,-24,-16,13,13,-15,13,-13,-10,-11,-12,-9,13,13,-8,13,13,13,-35,13,-23,-30,-29,-20,-21,13,13,13,13,13,-22,13,13,]),'NAME':([0,1,3,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,26,48,50,52,54,55,57,58,67,69,],[5,5,5,25,27,5,5,32,5,5,5,5,5,5,5,5,5,5,5,5,48,25,5,5,5,48,5,66,5,5,]),'LT':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[14,-23,-19,-18,-17,14,14,-24,-16,14,14,-15,14,-13,-10,-11,-12,-9,14,14,-8,14,14,14,-35,14,-23,-30,-29,-20,-21,14,14,14,14,14,-22,14,14,]),'STRING':([0,1,3,8,9,12,13,14,15,16,17,18,19,20,21,22,23,26,50,52,54,55,57,67,69,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'DIVIDE':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[19,-23,-19,-18,-17,-14,19,-24,-16,19,19,-15,19,-13,-10,-11,-12,-9,-6,-5,-8,19,19,-4,-35,19,-23,-30,-29,-20,-21,19,19,19,19,19,-22,19,19,]),'POW':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[18,-23,-19,-18,-17,18,18,-24,-16,18,18,-15,18,-13,-10,-11,-12,-9,18,18,-8,18,18,18,-35,18,-23,-30,-29,-20,-21,18,18,18,18,18,-22,18,18,]),'INT':([0,1,3,8,9,12,13,14,15,16,17,18,19,20,21,22,23,26,50,52,54,55,57,67,69,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'RBRACE':([5,6,7,10,11,25,27,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,53,56,59,60,68,70,],[-23,-19,-18,-17,-14,-24,-16,51,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,-7,-4,-35,-30,-29,-20,-21,-33,-22,-34,]),'COLON':([5,6,7,10,11,25,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,53,56,59,61,68,],[-23,-19,-18,-17,-14,-24,-16,50,-15,-3,-13,-10,-11,-12,-9,-6,-5,-8,-2,-7,-4,-35,-30,-29,-20,-21,67,-22,]),'LTE':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[15,-23,-19,-18,-17,15,15,-24,-16,15,15,-15,15,-13,-10,-11,-12,-9,15,15,-8,15,15,15,-35,15,-23,-30,-29,-20,-21,15,15,15,15,15,-22,15,15,]),'TIMES':([2,5,6,7,10,11,24,25,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,51,53,56,59,60,61,62,63,65,68,70,71,],[23,-23,-19,-18,-17,-14,23,-24,-16,23,23,-15,23,-13,-10,-11,-12,-9,-6,-5,-8,23,23,-4,-35,23,-23,-30,-29,-20,-21,23,23,23,23,23,-22,23,23,]),'LBRACK':([0,1,3,8,9,12,13,14,15,16,17,18,19,20,21,22,23,26,50,52,54,55,57,67,69,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FLOAT':([0,1,3,8,9,12,13,14,15,16,17,18,19,20,21,22,23,26,50,52,54,55,57,67,69,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arglist':([26,],[46,]),'statement':([0,],[4,]),'dictentry':([8,],[29,]),'kwarglist':([26,55,],[49,64,]),'listentry':([9,],[31,]),'expression':([0,1,3,8,9,12,13,14,15,16,17,18,19,20,21,22,23,26,50,52,54,55,57,67,69,],[2,11,24,28,30,33,34,35,36,37,38,39,40,41,42,43,44,47,60,61,62,63,65,70,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','Expression.py',150),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','Expression.py',155),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','Expression.py',156),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','Expression.py',157),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','Expression.py',158),
  ('expression -> expression POW expression','expression',3,'p_expression_binop','Expression.py',159),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','Expression.py',160),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','Expression.py',161),
  ('expression -> expression GTE expression','expression',3,'p_expression_binop','Expression.py',162),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','Expression.py',163),
  ('expression -> expression LTE expression','expression',3,'p_expression_binop','Expression.py',164),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','Expression.py',165),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','Expression.py',166),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','Expression.py',181),
  ('expression -> FLOAT NAME','expression',2,'p_expression_mag','Expression.py',185),
  ('expression -> INT NAME','expression',2,'p_expression_mag','Expression.py',186),
  ('expression -> FLOAT','expression',1,'p_expression_number','Expression.py',190),
  ('expression -> INT','expression',1,'p_expression_number','Expression.py',191),
  ('expression -> STRING','expression',1,'p_expression_string','Expression.py',195),
  ('expression -> NAME LPAREN arglist RPAREN','expression',4,'p_expression_func','Expression.py',199),
  ('expression -> NAME LPAREN kwarglist RPAREN','expression',4,'p_expression_func','Expression.py',200),
  ('expression -> NAME LPAREN arglist COMMA kwarglist RPAREN','expression',6,'p_expression_func','Expression.py',201),
  ('expression -> NAME','expression',1,'p_expression_name','Expression.py',232),
  ('expression -> NAME NAME','expression',2,'p_expression_namewunit','Expression.py',238),
  ('arglist -> expression','arglist',1,'p_arglist','Expression.py',251),
  ('arglist -> arglist COMMA expression','arglist',3,'p_arglist','Expression.py',252),
  ('kwarglist -> NAME EQUALS expression','kwarglist',3,'p_kwarglist','Expression.py',259),
  ('kwarglist -> kwarglist COMMA NAME EQUALS expression','kwarglist',5,'p_kwarglist','Expression.py',260),
  ('expression -> LBRACK listentry RBRACK','expression',3,'p_expression_list','Expression.py',268),
  ('expression -> LBRACE dictentry RBRACE','expression',3,'p_expression_dict','Expression.py',272),
  ('listentry -> expression','listentry',1,'p_listentry','Expression.py',276),
  ('listentry -> listentry COMMA expression','listentry',3,'p_listentry','Expression.py',277),
  ('dictentry -> expression COLON expression','dictentry',3,'p_dictentry','Expression.py',284),
  ('dictentry -> dictentry COMMA expression COLON expression','dictentry',5,'p_dictentry','Expression.py',285),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','Expression.py',293),
]
